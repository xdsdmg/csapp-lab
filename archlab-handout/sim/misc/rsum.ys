# Execution begins at address 0
  .pos 0
  irmovq stack, %rsp    # Set up stack pointer
  call main             # Execute main program
  halt                  # Terminate program

# Sample linked list
  .align 8
ele1:
  .quad 0x00a
  .quad ele2
ele2:
  .quad 0x0b0
  .quad ele3
ele3:
  .quad 0xc00
  .quad 0

main:
  irmovq ele1, %rsi
  call rsum_list       # rsum_list(&ele1)
  ret

rsum_list:
  pushq %rbx
  mrmovq (%rsi), %rbx
  xorq %rax, %rax           # sum = 0
  andq %rsi, %rsi           # Set CC
  je L35
  mrmovq 0x8(%rsi), %rsi    # p = p -> next
  call rsum_list
  addq %rbx, %rax

L35:
  popq %rbx
  ret

# Stack starts here and grows to lower addresses
  .pos 0x200
stack:
