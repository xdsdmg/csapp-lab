# Execution begins at address 0
  .pos 0
  irmovq stack, %rsp    # Set up stack pointer
  call main             # Execute main program
  halt                  # Terminate program

.align 8
# Source block
src:
  .quad 0x00a
  .quad 0x0b0
  .quad 0xc00

# Destination block
dest:
  .quad 0x111
  .quad 0x222
  .quad 0x333

main:
  irmovq src, %rsi
  irmovq dest, %rdi
  irmovq $0x3, %rcx
  call copy_block     # copy_block(src, dest, 0x3) 
  ret

copy_block:
  xorq %rax, %rax     # sum = 0
  irmovq $0x8, %r8    # Constant 8
  irmovq $0x1, %r9    # Constant 1
  jmp test            # Goto test

loop:
  mrmovq (%rsi), %r10       # Get value
  rmmovq %r10, (%rdi)       # Set value
  xorq %r10, %rax           # xor to sum
  addq %r8, %rsi            # src = src + 1
  addq %r8, %rdi            # dest = dest + 1
  subq %r9, %rcx            # i++

test:
  andq %rcx, %rcx     # Set CC
  jne loop            # Stop when 0
  ret                 # Return

# Stack starts here and grows to lower addresses
  .pos 0x200
stack:
