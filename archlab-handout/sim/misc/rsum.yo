                            | # Execution begins at address 0
0x000:                      |   .pos 0
0x000: 30f40002000000000000 |   irmovq stack, %rsp    # Set up stack pointer
0x00a: 804800000000000000   |   call main             # Execute main program
0x013: 00                   |   halt                  # Terminate program
                            | 
                            | # Sample linked list
0x018:                      |   .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |   .quad 0x00a
0x020: 2800000000000000     |   .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |   .quad 0x0b0
0x030: 3800000000000000     |   .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |   .quad 0xc00
0x040: 0000000000000000     |   .quad 0
                            | 
0x048:                      | main:
0x048: 30f61800000000000000 |   irmovq ele1, %rsi
0x052: 805c00000000000000   |   call rsum_list       # rsum_list(&ele1)
0x05b: 90                   |   ret
                            | 
0x05c:                      | rsum_list:
0x05c: a03f                 |   pushq %rbx
0x05e: 50360000000000000000 |   mrmovq (%rsi), %rbx
0x068: 6300                 |   xorq %rax, %rax           # sum = 0
0x06a: 6266                 |   andq %rsi, %rsi           # Set CC
0x06c: 738a00000000000000   |   je L35
0x075: 50660800000000000000 |   mrmovq 0x8(%rsi), %rsi    # p = p -> next
0x07f: 805c00000000000000   |   call rsum_list
0x088: 6030                 |   addq %rbx, %rax
                            | 
0x08a:                      | L35:
0x08a: b03f                 |   popq %rbx
0x08c: 90                   |   ret
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      |   .pos 0x200
0x200:                      | stack:
